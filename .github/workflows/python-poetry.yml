# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Install dependencies
      run: poetry install
    - name: Lint with pylint
      run: poetry run pylint $(git ls-files '*.py')
    - name: Lint with flake8
      run: poetry run flake8 $(git ls-files '*.py')
    - name: Run docformatter
      run: |
        poetry run docformatter -c $(git ls-files "*.py") \
                --pre-summary-newline \
                --make-summary-multi-line
    - name: Check formatting with black
      run: poetry run black . --check
    - name: Check unused imports and variables with autoflake
      run: |
        poetry run autoflake -c $(git ls-files "*.py") \
                --remove-duplicate-keys \
                --remove-unused-variables \
                --remove-all-unused-imports
    - name: Run pyupgrade
      run: poetry run pyupgrade $(git ls-files "*.py")
    - name: Test no API_KEY
      run: poetry run pytest -k "not test_api_endpoint_"
    - name: Test with API_KEY
      run: poetry run pytest -k "test_api_endpoint_"
      env:
        API_KEY: ${{ secrets.PDL_API_KEY }}
